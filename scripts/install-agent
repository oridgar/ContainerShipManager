if [[ $UID -ne 0]]; then
	"$0: Need to be root"
	exit 1
fi

NET_FILE=/etc/network/interfaces
MAIN_INTERFACE=eth0
IP=`ip addr show $MAIN_INTERFACE | grep "inet\b" | awk '{print $2}' | cut -d/ -f1`
NETMASK=`ifconfig $MAIN_INTERFACE | grep "inet " | awk '{ print$4 }' | cut -d ':' -f2`
GATEWAY=`route -n | grep '^0\.0\.0\.0' | awk '{ print $2 }'`
DEFAULT_PORT=kernPort
DEFAULT_PORT_ADDR=$IP
DEFAULT_PORT_NETMASK=$NETMASK
DEFAULT_PORT_GATEWAY=$GATEWAY


apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
echo "deb https://apt.dockerproject.org/repo ubuntu-trusty main" > /etc/apt/sources.list.d/docker.list
apt-get update
apt-get install apt-transport-https ca-certificates linux-image-extra-$(uname -r) docker-engine openvswitch-switch arping -y
#install csa package

#=====================
#Network Configuration
#=====================

#put in comment ip for eth0
sed -e '/iface $MAIN_INTERFACE inet dhcp/ s/^#*/#/' -i $NET_FILE
sed -e '/auto $MAIN_INTERFACE/ s/^#*/#/' -i $NET_FILE

ovs-vsctl add-br vSwitch0
ovs-vsctl add-port vSwitch0 kernPort -- set interface kernPort type=internal

#change main interface to be up with no IP
cat << EOF >> $NET_FILE

auto $MAIN_INTERFACE
iface $MAIN_INTERFACE inet manual
up ifconfig $MAIN_INTERFACE up
EOF

#add our default internal port to hold the previous main interface IP
cat << EOF >> $NET_FILE

auto $DEFAULT_PORT
iface $DEFAULT_PORT inet static
address $DEFAULT_PORT_ADDR
netmask $DEFAULT_PORT_NETMASK
gateway $DEFAULT_PORT_GATEWAY
EOF

#TODO: check this command as kernPort is not configured well
#      also, kernPort mac address changes. better to set to follow eth0 mac 
#apply interface IPs
ifconfig $MAIN_INTERFACE 0 && ifdown $MAIN_INTERFACE && ifup $MAIN_INTERFACE && ovs-vsctl add-port vSwitch0 $MAIN_INTERFACE || ifconfig $DEFAULT_PORT down && ifup $DEFAULT_PORT